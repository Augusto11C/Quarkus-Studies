# When [??].kafka.bootstrap.servers not provided this property defaults to localhost:9092.
quarkus.profile=local


# Dev Services (creates a topics in kafka using test-container) for Kafka is automatically enabled unless:
#quarkus.kafka.devservices.enabled=false # Although I set this property to false, testcontainer still started
quarkus.devservices.enabled=false
#%local.quarkus.kafka.devservices.enabled=false
%local.quarkus.devservices.enabled=false

# KAFKA CONFIG
kafka.bootstrap.servers=localhost:9092
kafka.schema.registry.url=http://localhost:8081
%local.kafka.bootstrap.servers=localhost:9092
%local.kafka.schema.registry.url=http://localhost:8081

# PRODUCER CONFIG
#%local.mp.messaging.outgoing.command.value.converter.schema.registry.url=http://localhost:8081
#%local.mp.messaging.outgoing.command.key.converter.schema.registry.url=http://localhost:8081
###%local.mp.messaging.outgoing.command.schema.registry.url=http://localhost:8081
%local.mp.messaging.outgoing.command.connector=smallrye-kafka
%local.mp.messaging.outgoing.command.topic=command-local-6
%local.mp.messaging.outgoing.command.failure-strategy=ignore
%local.mp.messaging.outgoing.command.key.serializer=org.apache.kafka.common.serialization.StringSerializer
%local.mp.messaging.outgoing.command.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer


# CONSUMER CONFIG
#%local.mp.messaging.incoming.command-in.value.converter.schema.registry.url=http://localhost:8081
#%local.mp.messaging.incoming.command-in.key.converter.schema.registry.url=http://localhost:8081
###%local.mp.messaging.incoming.command-in.schema.registry.url=http://localhost:8081
%local.mp.messaging.incoming.command-in.connector=smallrye-kafka
%local.mp.messaging.incoming.command-in.auto.offset.reset=earliest
%local.mp.messaging.incoming.command-in.topic=command-local-6
%local.mp.messaging.incoming.command-in.partitions=1
%local.mp.messaging.incoming.command-in.group.id=command_reader
%local.mp.messaging.incoming.command-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%local.mp.messaging.incoming.command-in.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
#%local.mp.messaging.incoming.command-in.key.converter=io.confluent.connect.avro.AvroConverter
#%local.mp.messaging.incoming.command-in.value.converter=io.confluent.connect.avro.AvroConverter
#%local.mp.messaging.incoming.command-in.key.deserializer.specific.avro.reader=true
#%local.mp.messaging.incoming.command-in.value.deserializer.specific.avro.reader=true