# When [??].kafka.bootstrap.servers not provided this property defaults to localhost:9092.

# Dev Services (creates a topics in kafka using test-container) for Kafka is automatically enabled unless:
# Although I set this property to false, testcontainer still started
quarkus.kafka.devservices.enabled=false
quarkus.devservices.enabled=false
%local.quarkus.kafka.devservices.enabled=false
%local.quarkus.devservices.enabled=false

# KAFKA CONFIG
kafka.bootstrap.servers=localhost:9092
kafka.schema.registry.url=http://localhost:8081
#kafka.security.protocol=SSL
#kafka.ssl.truststore.location=/tmp/ssl/local-app.truststore.jks
#kafka.ssl.truststore.password=changeit
#kafka.ssl.truststore.type=JKS
#kafka.ssl.keystore.location=/tmp/ssl/local-app.keystore.jks
#kafka.ssl.keystore.password=changeit
#kafka.ssl.keystore.type=JKS
#%local.kafka.bootstrap.servers=localhost:9092
#%local.kafka.schema.registry.url=http://localhost:8081

## PRODUCER COMMAND CONFIG
##%local.mp.messaging.outgoing.command.value.converter.schema.registry.url=http://localhost:8081
##%local.mp.messaging.outgoing.command.key.converter.schema.registry.url=http://localhost:8081
####%local.mp.messaging.outgoing.command.schema.registry.url=http://localhost:8081
#%local.mp.messaging.outgoing.command.connector=smallrye-kafka
#%local.mp.messaging.outgoing.command.topic=command-local-6
#%local.mp.messaging.outgoing.command.failure-strategy=ignore
#%local.mp.messaging.outgoing.command.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#%local.mp.messaging.outgoing.command.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer


## CONSUMER COMMAND CONFIG
##%local.mp.messaging.incoming.command-in.value.converter.schema.registry.url=http://localhost:8081
##%local.mp.messaging.incoming.command-in.key.converter.schema.registry.url=http://localhost:8081
####%local.mp.messaging.incoming.command-in.schema.registry.url=http://localhost:8081
#%local.mp.messaging.incoming.command-in.connector=smallrye-kafka
#%local.mp.messaging.incoming.command-in.auto.offset.reset=earliest
#%local.mp.messaging.incoming.command-in.topic=command-local-6
#%local.mp.messaging.incoming.command-in.partitions=1
#%local.mp.messaging.incoming.command-in.group.id=command_reader
#%local.mp.messaging.incoming.command-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#%local.mp.messaging.incoming.command-in.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
##%local.mp.messaging.incoming.command-in.key.converter=io.confluent.connect.avro.AvroConverter
##%local.mp.messaging.incoming.command-in.value.converter=io.confluent.connect.avro.AvroConverter
##%local.mp.messaging.incoming.command-in.key.deserializer.specific.avro.reader=true
##%local.mp.messaging.incoming.command-in.value.deserializer.specific.avro.reader=true

# PRODUCER EVENT CONFIG (Local)
#%local.mp.messaging.outgoing.event-out.bootstrap.servers=localhost:9092
#%local.mp.messaging.outgoing.event-out.schema.registry.url=http://localhost:8081
#%local.mp.messaging.outgoing.event-out.security.protocol=SSL
#%local.mp.messaging.outgoing.event-out.ssl.truststore.location=/tmp/ssl/local-app.truststore.jks
#%local.mp.messaging.outgoing.event-out.ssl.truststore.password=changeit
#%local.mp.messaging.outgoing.event-out.ssl.truststore.type=JKS
#%local.mp.messaging.outgoing.event-out.ssl.keystore.location=/home/acalado/local-app.keystore.jks
#%local.mp.messaging.outgoing.event-out.ssl.keystore.password=changeit
#%local.mp.messaging.outgoing.event-out.ssl.keystore.type=JKS
%local.mp.messaging.outgoing.event-out.connector=smallrye-kafka
%local.mp.messaging.outgoing.event-out.topic=event-local-6
%local.mp.messaging.outgoing.event-out.failure-strategy=ignore


# CONSUMER EVENT CONFIG (Local)
#%local.mp.messaging.incoming.event-in.bootstrap.servers=localhost:9092
#%local.mp.messaging.incoming.event-in.schema.registry.url=http://localhost:8081
#%local.mp.messaging.incoming.event-in.security.protocol=SSL
#%local.mp.messaging.incoming.event-in.ssl.truststore.location=/tmp/ssl/local-app.truststore.jks
#%local.mp.messaging.incoming.event-in.ssl.truststore.password=changeit
#%local.mp.messaging.incoming.event-in.ssl.truststore.type=JKS
#%local.mp.messaging.incoming.event-in.ssl.keystore.location=/tmp/ssl/local-app.keystore.jks
#%local.mp.messaging.incoming.event-in.ssl.keystore.type=JKS
#%local.mp.messaging.incoming.event-in.ssl.keystore.password=changeit
%local.mp.messaging.incoming.event-in.connector=smallrye-kafka
%local.mp.messaging.incoming.event-in.auto.offset.reset=earliest
%local.mp.messaging.incoming.event-in.topic=event-local-6
%local.mp.messaging.incoming.event-in.partitions=1
%local.mp.messaging.incoming.event-in.group.id=event_reader


# PRODUCER EVENT CONFIG (Dev)
%dev.mp.messaging.outgoing.event-out.kafka-configuration=my-configuration2-aug
%dev.mp.messaging.outgoing.event-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.event-out.topic=event-dev
%dev.mp.messaging.outgoing.event-out.failure-strategy=ignore

# CONSUMER EVENT CONFIG (Dev)
%dev.mp.messaging.incoming.event-in.kafka-configuration=my-configuration2-aug
%dev.mp.messaging.incoming.event-in.connector=smallrye-kafka
%dev.mp.messaging.incoming.event-in.auto.offset.reset=earliest
%dev.mp.messaging.incoming.event-in.topic=event-dev
%dev.mp.messaging.incoming.event-in.partitions=1
%dev.mp.messaging.incoming.event-in.group.id=event_reader